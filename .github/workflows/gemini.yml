name: CI/CD with GKE

on:
  push:
    branches: [ master ]

env:
  SHA: ${{ github.sha }}
  CLOUDSDK_CORE_DISABLE_PROMPTS: 1

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Download gcloud SDK and install
      - name: Download Google Cloud SDK
        run: |
          curl https://sdk.cloud.google.com | bash > /dev/null

      # Configure gcloud path
      - name: Configure Google Cloud SDK path
        run: echo "source $HOME/google-cloud-sdk/path.bash.inc"

      # Authenticate to Google Cloud
      - name: Decrypt service account key
        run: gpg --quiet --batch --yes --decrypt --passphrase="${{ secrets.PASSPHRASE }}" --output service-account.json service-account.json.gpg

      - name: Authenticate to Google Cloud
        run: gcloud auth activate-service-account --key-file=service-account.json

      - name: install the gcloud cli
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: multi-k8s-445712
          install_components: 'gke-gcloud-auth-plugin'
          export_default_credentials: true

      # Set project and zone; get cluster credentials
      - name: Set project ID,zone get credentials
        run: |
          gcloud config set project multi-k8s-445712
          gcloud config set compute/zone us-central1-a
          gcloud container clusters get-credentials multi-cluster

      # Login to Docker registry
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Build and run test image
      - name: Build and run test image
        run: |
          docker build -t ercankurtoglu/react-test -f ./client/Dockerfile.dev ./client
          docker run -e CI=true ercankurtoglu/react-test npm test

      # Build container images with tags
      - name: Build container images
        run: |
          docker build -t ercankurtoglu/multi-client:latest -t ercankurtoglu/multi-client:$SHA -f ./client/Dockerfile ./client
          docker build -t ercankurtoglu/multi-server:latest -t ercankurtoglu/multi-server:$SHA -f ./server/Dockerfile ./server
          docker build -t ercankurtoglu/multi-worker:latest -t ercankurtoglu/multi-worker:$SHA -f ./worker/Dockerfile ./worker

      # Push container images
      - name: Push container images
        run: |
          docker push ercankurtoglu/multi-client:latest
          docker push ercankurtoglu/multi-server:latest
          docker push ercankurtoglu/multi-worker:latest
          docker push ercankurtoglu/multi-client:$SHA
          docker push ercankurtoglu/multi-server:$SHA
          docker push ercankurtoglu/multi-worker:$SHA

      # Apply Kubernetes configurations
      - name: Apply Kubernetes configurations
        run: kubectl apply -f k8s

      # Update deployments with image tags
      - name: Update server, client, worker deployment image
        run: |
          kubectl set image deployments/server-deployment server=ercankurtoglu/multi-server:$SHA
          kubectl set image deployments/client-deployment client=ercankurtoglu/multi-client:$SHA
          kubectl set image deployments/worker-deployment worker=ercankurtoglu/multi-worker:$SHA